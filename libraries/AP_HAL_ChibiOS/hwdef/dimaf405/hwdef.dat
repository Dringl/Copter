# hw definition file for MatekF405 hardware
# tested on the MatekF405-OSD board
# with thanks to betaflight for pinout


# MCU class and specific type
MCU STM32F4xx STM32F405xx

# board ID for firmware load
APJ_BOARD_ID 8888

# crystal frequency
OSCILLATOR_HZ 8000000
# 以定时器4为系统时钟
define STM32_ST_USE_TIMER 4
define CH_CFG_ST_RESOLUTION 16

FLASH_SIZE_KB 1024


# only one I2C bus
I2C_ORDER I2C1

# The normal usage of this ordering is:
# 1) SERIAL0: console (primary mavlink, usually USB)
# 2) SERIAL1: telem1
# 3) SERIAL2: telem2
# 4) SERIAL3: primary GPS
# 5) SERIAL4: GPS2
# 6) SERIAL5: extra UART (usually RTOS debug console)
# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART3 UART4 USART1 UART5 USART2


# The format is P+port+pin. So PC4 is portC pin4.
# LEDs
PB9 LED_BLUE OUTPUT LOW GPIO(0)
#PA14 LED_GREEN OUTPUT LOW GPIO(1)

#define HAL_GPIO_A_LED_PIN 0
#define HAL_GPIO_B_LED_PIN 1


#定义照明灯端口，暂留
PC6 POWER_LED OUTPUT HIGHT GPIO(2)
PC7 ALERT_LED OUTPUT LOW GPIO(3)


# buzzer
#PC13 BUZZER OUTPUT GPIO(80) LOW
#define HAL_BUZZER_PIN 80



# spi1 bus for IMU
#PA5 SPI1_SCK SPI1
#PA6 SPI1_MISO SPI1
#PA7 SPI1_MOSI SPI1

# spi2 for OSD
#PB13 SPI2_SCK SPI2
#PB14 SPI2_MISO SPI2
#PB15 SPI2_MOSI SPI2
#PB10 MAX7456_CS CS

# spi3 for sdcard and onboard flash
#PB3 SPI3_SCK SPI3
#PB4 SPI3_MISO SPI3
#PB5 SPI3_MOSI SPI3
#PC1 SDCARD_CS CS
#PC0 M25P16_CS CS

#PC2 MPU6000_CS CS

# only one I2C bus in normal config
#PB6 I2C1_SCL I2C1
#PB7 I2C1_SDA I2C1

# analog pins   电池电量检测
PC5 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC4 BATT_CURRENT_SENS ADC1 SCALE(1)
PB1 RSSI_ADC_PIN ADC1 SCALE(1)

# define default battery setup
# PC5 - ADC12_CH15
define HAL_BATT_VOLT_PIN 15
# PC4 - ADC12_CH14
define HAL_BATT_CURR_PIN 14
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

#analog rssi pin (also could be used as analog airspeed input)
# PB1 - ADC12_CH9
define BOARD_RSSI_ANA_PIN 9

# USART1
PA9 USART1_TX USART1
PA10 USART1_RX USART1

# RC input using timer
PA3 TIM9_CH2 TIM9 RCININT PULLDOWN

# alternative RC input using UART
PA2 USART2_TX USART2 NODMA
PA3 USART2_RX USART2 NODMA ALT(1)

# USART3 消防炮接口
PC10 USART3_TX USART3
PC11 USART3_RX USART3

# UART4  遥控器1输入
PA1 UART4_RX UART4

# UART5  遥控器2输入
PD2  UART5_RX UART5

# CAN2 用于电机驱动
PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2

# PA10 IO-debug-console   数据线
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PB14 GPIO_CAN2_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(35)

# USB detection
# PB12 VBUS INPUT OPENDRAIN

# debug (disabled out to allow for both LEDs)
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# PWM out pins. Note that channel order follows the ArduPilot motor
# order conventions
#PC6  TIM3_CH1 TIM3 PWM(1) GPIO(50)
#PC7  TIM8_CH2 TIM8 PWM(2) GPIO(51)
#PC8  TIM8_CH3 TIM8 PWM(3) GPIO(52)
#PC9  TIM8_CH4 TIM8 PWM(4) GPIO(53)
#PA15 TIM2_CH1 TIM2 PWM(5) GPIO(54)
#PA8  TIM1_CH1 TIM1 PWM(6) GPIO(55)

define HAL_STORAGE_SIZE 15360
STORAGE_FLASH_PAGE 2

# reserve 32k for bootloader and 32k for flash storage
FLASH_RESERVE_START_KB 64

# one IMU
#IMU Invensense SPI:mpu6000 ROTATION_YAW_180

# probe for I2C BMP280, but allow init on board variants without onboard baro too
#BARO BMP280 I2C:0:0x76
define HAL_BARO_ALLOW_INIT_NO_BARO 1
#define AP_BARO_BACKEND_DEFAULT_ENABLED 0
#define AP_BARO_BMP280_ENABLED 1

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
#define HAL_PROBE_EXTERNAL_I2C_COMPASSES
#define HAL_I2C_INTERNAL_MASK 0
#define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# SPI devices
#SPIDEV mpu6000   SPI1 DEVID1 MPU6000_CS MODE3 1*MHZ 8*MHZ 
#SPIDEV sdcard    SPI3 DEVID1 SDCARD_CS  MODE0 400*KHZ 25*MHZ
#SPIDEV osd       SPI2 DEVID1 MAX7456_CS MODE0 10*MHZ 10*MHZ

# filesystem setup on sdcard
#define HAL_OS_FATFS_IO 1

# setup for OSD
#define OSD_ENABLED 1
#define HAL_OSD_TYPE_DEFAULT 1
#ROMFS_WILDCARD libraries/AP_OSD/fonts/font0.bin

# disable parachute and sprayer to save flash
define HAL_PARACHUTE_ENABLED 0
define HAL_SPRAYER_ENABLED 0

# save some flash
include ../include/save_some_flash.inc
include ../include/minimize_fpv_osd.inc

